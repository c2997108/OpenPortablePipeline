#!/bin/bash

explanation='
Windowed Adaptive Trimming for fastq files using quality (single-end)
'
inputdef='
input_1::FASTQ:*.fastq,*.fq,*.fastq.gz,*.fq.gz
'
optiondef='
opt_c:cpu threads:8
opt_m:memory limit (GB):64
opt_s:sickle option:-t sanger -q 15 -l 5000
'
runcmd="$0 -c #opt_c# -m #opt_m# -s #opt_s# -f #opt_f# #input_1#"

export IM_SICKLE="quay.io/biocontainers/sickle-trim:1.33--2"

source $(dirname `readlink -f $0 || echo $0`)/common.sh

set -eux
set -o pipefail

if [ `echo "$input_1"|grep "[.]gz$"|wc -l||true` = 1 ]; then DO_SICKLE gzip -dc "$input_1" > `echo "$input_1"|sed 's/[.]gz$//'`; input_1=`echo "$input_1"|sed 's/[.]gz$//'`; fi
DO_SICKLE sickle se -f "$input_1" $opt_s -o output.sickle.fastq

post_processing
#<option detail>
#<opt_s>
# sickle se --help

Usage: sickle se [options] -f <fastq sequence file> -t <quality type> -o <trimmed fastq file>

Options:
-f, --fastq-file, Input fastq file (required)
-t, --qual-type, Type of quality values (solexa (CASAVA < 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA >= 1.8)) (required)
-o, --output-file, Output trimmed fastq file (required)
-q, --qual-threshold, Threshold for trimming based on average quality in a window. Default 20.
-l, --length-threshold, Threshold to keep a read based on length after trimming. Default 20.
-x, --no-fiveprime, Don't do five prime trimming.
-n, --trunc-n, Truncate sequences at position of first N.
-g, --gzip-output, Output gzipped files.
--quiet, Don't print out any trimming information
--help, display this help and exit
--version, output version information and exit
#</opt_s>
#</option detail>

