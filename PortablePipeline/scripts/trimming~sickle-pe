#!/bin/bash

explanation='
Windowed Adaptive Trimming for fastq files using quality (paired-end)
'
inputdef='
input_1::Input paired-end forward fastq file:*.fastq,*.fq,*.fastq.gz,*.fq.gz
input_2::Input paired-end reverse fastq file:*.fastq,*.fq,*.fastq.gz,*.fq.gz
'
optiondef='
opt_c:cpu threads:8
opt_m:memory limit (GB):64
opt_s:sickle option:-t sanger -o output.sickle_1.fastq -p output.sickle_2.fastq -s output.sickle_single.fastq
'
runcmd="$0 -c #opt_c# -m #opt_m# -s #opt_s# -f #opt_f# #input_1# #input_2#"

export IM_SICKLE="quay.io/biocontainers/sickle-trim:1.33--2"

source $(dirname `readlink -f $0 || echo $0`)/common.sh

set -eux
set -o pipefail

if [ `echo "$input_1"|grep "[.]gz$"|wc -l||true` = 1 ]; then DO_SICKLE gzip -dc "$input_1" > `echo "$input_1"|sed 's/[.]gz$//'`; input_1=`echo "$input_1"|sed 's/[.]gz$//'`; fi
if [ `echo "$input_2"|grep "[.]gz$"|wc -l||true` = 1 ]; then DO_SICKLE gzip -dc "$input_2" > `echo "$input_2"|sed 's/[.]gz$//'`; input_2=`echo "$input_2"|sed 's/[.]gz$//'`; fi
DO_SICKLE sickle pe -f "$input_1" -r "$input_2" $opt_s

post_processing
#<option detail>
#<opt_s>
# sickle pe --help

If you have separate files for forward and reverse reads:
Usage: sickle pe [options] -f <paired-end forward fastq file> -r <paired-end reverse fastq file> -t <quality type> -o <trimmed PE forward file> -p <trimmed PE reverse file> -s <trimmed singles file>

Options:
Paired-end separated reads
--------------------------
-f, --pe-file1, Input paired-end forward fastq file (Input files must have same number of records)
-r, --pe-file2, Input paired-end reverse fastq file
-o, --output-pe1, Output trimmed forward fastq file
-p, --output-pe2, Output trimmed reverse fastq file. Must use -s option.

Paired-end interleaved reads
----------------------------
-c, --pe-combo, Combined (interleaved) input paired-end fastq
-m, --output-combo, Output combined (interleaved) paired-end fastq file. Must use -s option.
-M, --output-combo-all, Output combined (interleaved) paired-end fastq file with any discarded read written to output file as a single N. Cannot be used with the -s option.

Global options
--------------
-t, --qual-type, Type of quality values (solexa (CASAVA < 1.3), illumina (CASAVA 1.3 to 1.7), sanger (which is CASAVA >= 1.8)) (required)
-s, --output-single, Output trimmed singles fastq file
-q, --qual-threshold, Threshold for trimming based on average quality in a window. Default 20.
-l, --length-threshold, Threshold to keep a read based on length after trimming. Default 20.
-x, --no-fiveprime, Don't do five prime trimming.
-n, --truncate-n, Truncate sequences at position of first N.
-g, --gzip-output, Output gzipped files.
--quiet, do not output trimming info
--help, display this help and exit
--version, output version information and exit
#</opt_s>
#</option detail>

