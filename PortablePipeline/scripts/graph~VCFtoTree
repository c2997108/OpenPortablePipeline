#!/bin/bash

explanation='
Draw the clustering tree using the SNP site with non-zero coverage for all samples
'
inputdef='
input_1::vcf(.gz) file:*.vcf,*.vcf.gz
'
optiondef='
opt_c:cpu threads:8
opt_m:memory limit (GB):64
opt_q:GQ threshold:10
'
runcmd="$0 -c #opt_c# -m #opt_m# -q #opt_q# #input_1#"

export IM_BASE="c2997108/centos7:1-trinity_2.8.5-kallisto_0.46.0-blast_2.9.0-trinotate-3.1.1-R_4-kegg_4"
export IM_R="c2997108/centos7:1-trinity_2.8.5-kallisto_0.46.0-blast_2.9.0-trinotate-3.1.1-R_4-kegg_4"


source $(dirname `readlink -f $0 || echo $0`)/common.sh

set -eux
set -o pipefail


#decompress input files
if [ `echo "$input_1"|grep "[.]gz$"|wc -l||true` = 1 ]; then DO_BASE gzip -dc "$input_1" > `echo "$input_1"|sed 's/[.]gz$//'`; input_1=`echo "$input_1"|sed 's/[.]gz$//'`; fi

vcf="$input_1"
out="`basename $input_1` .vcf"

cat $vcf |grep -v "^##"|awk -v gq=$opt_q -F'\t' '
 {ORS="\t"; print $1"\t"$2"\t"$4"\t"$5"\t"$6"\t"$8;
  for(i=10;i<=NF;i++){split($i,arr,":"); if(NR==1){print $i}else{if(arr[4]>=gq){print arr[1]}else{print "./."}}}; ORS="\n"; print ""
 }'|sed 's/\t$//'|awk -F'\t' '{n=0;for(i=7;i<=NF;i++){if($i=="./."){n++}}; if(n<NF-6){print $0}}' > output.tsv
if [ `cat output.tsv|wc -l` -lt 1000000 ]; then
 DO_BASE java -jar /usr/local/bin/excel2.jar output.tsv output.xlsx
fi

grep -v "[.]/[.]" output.tsv |awk -F'\t' '
 NR==1{ORS="\t"; print $1":"$2":"$3":"$4; for(i=7;i<=NF;i++){print $i}; ORS="\n"; print ""}
 NR>1{ORS="\t"; print $1":"$2":"$3":"$4; for(i=7;i<=NF;i++){split($i,arr2,"/"); if(arr2[1]>1){arr2[1]=1}; if(arr2[2]>1){arr2[2]=1}; print arr2[1]+arr2[2]}; ORS="\n"; print ""}
'|sed 's/\t$//' > output.nonNA.txt
cut -f 2- output.nonNA.txt > output.nonNA.tsv

w=`head -n 1 output.tsv|awk -F'\t' '{if((NF-6)/10<8){print 8}else{print (NF-6)/10}}'`
h=`head -n 1 output.tsv|awk -F'\t' '{if((NF-6)/10<8){print 4}else{print (NF-6)/20}}'`

echo "a=read.table('output.nonNA.tsv',sep='\t',header=T)
c=cor(a); for(i in 1:ncol(c)){c[is.na(c[,i]),i]=0}; result=hclust(as.dist(1-c),'ave')
pdf('sample-relation.pdf',width=$w, height=$h, pointsize=2)
plot(result)
dev.off()" > make-sample-relation.R

DO_R R --vanilla < make-sample-relation.R


post_processing



#<option detail>
#</option detail>

