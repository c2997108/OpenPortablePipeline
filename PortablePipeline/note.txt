
## スクリプト中の制限
### 共通の制限というか仕様
- opt_[A-z]はcmdの中の「-a 'xxx'」などから勝手にopt_a='xxx'と組み立てるので、cmdの中で「-a opt_a」とすると分かりやすい。
  「-a opt_b」とすると混乱のもと
- input_1とかは、cmdの中のオプション部分を削除した引数の中から順番に、inputdefに書いてある入力ファイルのうちoptionではなく必須の
  入力ファイルを順番に割り当てているので、cmdの中の入力ファイル順と、inputdefの順番を合わせること。
- optionファイルは
  input_2=${1:-}
  などのように記述して明示的に割り振る必要あり。
- opt_hはヘルプ表示のため使えない
- WAITPARALLELの後はset -xになり、実行コマンドが明示的に表示されるモードになる
- 他のスクリプトを呼び出すときは、bash "$scriptdir"/xxx で良い。
  ただし、docker等を呼び出した中で使うのはスクリプトの絶対パスにアクセスできない可能性があり危険
- inputdefの中には「:」区切りで4つのフィールドがある。1つ目は入力ファイルを入れる変数名。
  2つ目は複数ファイルの場合なのか(directoryという文字が入っていれば良い)、必須ではないファイルなのか(optionという文字が入っていれば良い)
  を意味する。directory_optionみたいな書き方も有効。3つ目は入力ファイルの説明。
  4つ目は拡張子を制限するときの書式。
- optiondefの中には3つのフィールドがある。1つ目はオプションを入れる変数名。任意の名前で良いのだけど、opt_aなどの「opt_」＋小文字の
  名前にしておくと、自動でgetoptでopt_aに入れてくれたりするので、オプションの変数名は「opt_a」などを推奨。
  2つ目はオプションの簡単な説明。3つ目はオプションのデフォルト値。
  common.shを読み込むと、自動で3つ目のフィールドの値が入った1つ目のフィールドの変数が出来る。
  opt_aなどの名前の場合は、さらに引数の値でopt_aを上書きした変数が準備されている。
- 複数の出力ファイルがあって、それらを次のスクリプトの入力にしたいときは、出力ファイルをいったんtar.gzで固めておく方針が良さそう。

### dockerに起因する部分
- ファイルは$PWD以下しかマウントされないので、親ディレクトリのファイルを使わない
- dockerで起動されるコマンドは1行で書くこと
- dockerはrootで起動されるので、rmは"rm -f"と書くこと
- dockerで作られたディレクトリはrootなので、dockerの外でそのディレクトリにファイルを作ろうとすると失敗する。ユーザ権限で先にディレクトリを作るべき。
- 途中で止めたいときは、docker stopを使わないと、コマンド終了まで待たされる

### maser用
- 入力フォルダは「$input_1」ではなく、「$input_1/」と書くこと。input_1がシンボリックリンクだとそれ以上追ってくれないから。

### SGE用
- def_slotと、mem_req, s_vmemのオプションを設定出来るようにSGEサーバの設定をしておくこと。
- ジョブが途中で停止させられ、再度最初から実行されることが頻繁に有り得るので、
  その状態を想定してフォルダを作るときは事前に作られている可能性を考慮する。

### スパコン用
- javaの引数には-Xmx1Gなどを必ず指定すること。指定が無いとマシンの半分くらいのメモリ？を確保しようとしてこける。

### Mac用
- dockerを/usr/local/binにインストールし、Homebrewでcoreutilsを/usr/local/opt/coreutils/libexec/gnubinにインストールする必要あり。

### WSL用
- wslコマンドで起動したら、Ubuntuがデフォルトになるようにインストールしておく必要あり。
  2つ以上のディストリビューションをインストールしたならばwslconfigで設定しておく。
- 一度はUbuntuを起動し、ユーザ名、パスワードを設定しておく必要あり。
- WSL1ではcentos6のコンテナは起動しない
